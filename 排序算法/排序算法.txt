为什么要排序

1 冒泡排序
从左向右扫描数据，选择最大的数据，放在右边
要点：两个两个进行比较，如果左边的数大于右边的数就进行交换
特点：算法简单，但是效率很低，数据量大的时候就不适用了。

外层循环 ，n-1 :原因在于最后一次就不用扫描了，剩下的一个就是最大的，就不需要排序了
内层循环，每次都是从0开始，n-1 再 -i，每次会找出一个最大值，所以内层循环每次都少一个

慢的原因在于，有很多的没有必要的交换。（虽然比较是需要的但是没必要每次比较都交换。因此后面
会学习其他的排序算法会减少 《交换》 的次数


2 选择排序
从当前未排序的整数中找一个最小的整数，将它放在已经排序的整数列表的最后，
要点： 选择排序选最小的，往左边放。
想象，一条毛巾作为最小值的标记，但是并不交换数据，只有等一次全部扫描完成后，再交换毛巾的数

过程： 每次找到最小的
0 到 i已排序
i+1 到n-1是没排序的。
    外层 0 到 n-1
    内层 i+1 到n

3 顺序查找
没有排序的数据，只能顺序查找
顺序查找，速度慢，




4 二分查找(折半查找)
# 1 M = 100万 = 2^20    利用二分查找只需要20次；1G = 10亿 =  2^30   也只需要30次。
因此如果数据量非常大的话，折半查找效率非常高。故考虑输入的插入时，如果可以进行排序，就尽量排序
# 有趣的例子，兰州拉面



5 插入排序
属于低级排序的一种，但是效率是最高的
