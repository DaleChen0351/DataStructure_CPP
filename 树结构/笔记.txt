树

数组
    优点 排序的数组和折半查找（二分查找）
    缺点 插入和删除都很慢

链表
    优点 插入和删除都很快
    缺点 不能进行二分查找（因为没有下标）

树
    树 = 数组的优点 和链表的优点
    10亿个数据插入，也很快，只比较30次而已。所以树插入或者删除时候很快的。原因在于可以进行二分查找
    树可以有三叉树，二叉树，四叉树。
    但是二叉树最简单，计算机中使用，所以只学习二叉树。
    一叉树：树退化成链表。


    度：一个节点拥有的子树的个数
    树的度：一个节点最大的
    叶子结点（终端节点）： 没有子节点的
    树的深度（树的高度）：从1开始，到最大的那个
    祖先节点：

二叉树：
    二叉树的表示：
        使用数组：造成存储空间浪费
        使用链表：常用

二叉查找树： Binary Search Tree
    原理：
        每一个元素有一个键值，而且不能重复。
        插入和查找都是很快速的，即有数组可以二分查找的特性，又有链表可以快速插入或者删除的特性
    本质：
        二叉查找树本质上也是一颗二叉树，如果采用中序遍历的方式，可以得到从小到大的sorted数据。

    缺点： 
        二叉查找树有可能在特殊情况下，退化成链表，原因在于无法动态平衡根节点。
    总结：
        二叉查找树不是自动平衡，根节点永远就是第一个插入的节点。
        若希望动态选择中间值做根节点，做自动平衡，则需要更高级的数据结构，红黑树是平衡二叉树的一种，也是最为复杂的一种。
    


